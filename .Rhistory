mutate(type = case_when(grepl("StormFlow", isStorm) ~ "1",
grepl("BaseFlow", isStorm) ~ "0"
),
use = case_when((Datetime >= "2020-02-07 04:00:00" & Datetime <= "2020-02-07 14:00:00") ~ TRUE)
)
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 26) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 26) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 26) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"))
time_scale <- read_excel(here("Output", "CSW_2020_withRegression_QAQC.xlsx")) %>%
mutate(type = case_when(grepl("StormFlow", isStorm) ~ "1",
grepl("BaseFlow", isStorm) ~ "0"
),
use = case_when((Datetime >= "2020-02-07 04:00:00" & Datetime <= "2020-02-07 14:00:00") ~ TRUE)
)
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"))
time_scale <- read_excel(here("Output", "CSW_2020_withRegression_QAQC.xlsx")) %>%
mutate(type = case_when(grepl("StormFlow", isStorm) ~ "1",
grepl("BaseFlow", isStorm) ~ "0"
),
use = case_when((Datetime >= "2020-02-07 04:00:00" & Datetime <= "2020-02-07 14:00:00") ~ TRUE)
)
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"), height = 40, width = 40, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"), height = 40, width = 40, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"), height = 40, width = 40, units = "cm")
time_scale <- read_excel(here("Output", "CSW_2020_withRegression_QAQC.xlsx")) %>%
mutate(type = case_when(grepl("StormFlow", isStorm) ~ "1",
grepl("BaseFlow", isStorm) ~ "0"
),
use = case_when((Datetime >= "2020-02-07 04:00:00" & Datetime <= "2020-02-07 14:00:00") ~ TRUE)
)
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"), height = 10, width = 10, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"), height = 10, width = 10, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"), height = 10, width = 10, units = "cm")
packages <- c("tidyverse", "ggforce", "Metrics", "ggpubr", "webshot", "ggrepel", "scales", "here", "readxl", "imputeTS", "padr", "survival", "stringr", "lubridate", "NADA", "gt", "webshot", "zoo", "rlang", "multcompView", "rcompanion", "forecast", "smooth", "KbMvtSkew")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
time_scale <- read_excel(here("Output", "CSW_2020_withRegression_QAQC.xlsx")) %>%
mutate(type = case_when(grepl("StormFlow", isStorm) ~ "1",
grepl("BaseFlow", isStorm) ~ "0"
),
use = case_when((Datetime >= "2020-02-07 04:00:00" & Datetime <= "2020-02-07 14:00:00") ~ TRUE)
)
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"), height = 10, width = 10, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"), height = 10, width = 10, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"), height = 10, width = 10, units = "cm")
time_scale <- read_excel(here("Output", "CSW_2020_withRegression_QAQC.xlsx")) %>%
mutate(type = case_when(grepl("StormFlow", isStorm) ~ "1",
grepl("BaseFlow", isStorm) ~ "0"
),
use = case_when((Datetime >= "2020-02-07 04:00:00" & Datetime <= "2020-02-07 14:00:00") ~ TRUE)
)
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"), height = 30, width = 30, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"), height = 30, width = 30, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"), height = 30, width = 30, units = "cm")
time_scale <- read_excel(here("Output", "CSW_2020_withRegression_QAQC.xlsx")) %>%
mutate(type = case_when(grepl("StormFlow", isStorm) ~ "1",
grepl("BaseFlow", isStorm) ~ "0"
),
use = case_when((Datetime >= "2020-02-07 04:00:00" & Datetime <= "2020-02-07 14:00:00") ~ TRUE)
)
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"), height = 20, width = 20, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"), height = 20, width = 20, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"), height = 20, width = 20, units = "cm")
theme_set(theme_grey(base_size = 40))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"), height = 20, width = 20, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"), height = 20, width = 20, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"), height = 20, width = 20, units = "cm")
theme_set(theme_grey(base_size = 30))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"), height = 20, width = 20, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"), height = 20, width = 20, units = "cm")
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 40) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"), height = 20, width = 20, units = "cm")
