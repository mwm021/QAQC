ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 26) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
theme_bw(base_size = 26) +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 26) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"))
time_scale <- read_excel(here("Output", "CSW_2020_withRegression_QAQC.xlsx")) %>%
mutate(type = case_when(grepl("StormFlow", isStorm) ~ "1",
grepl("BaseFlow", isStorm) ~ "0"
),
use = case_when((Datetime >= "2020-02-07 04:00:00" & Datetime <= "2020-02-07 14:00:00") ~ TRUE)
)
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "StormFlow36", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "StormFlow.png"))
time_scale %>% filter(isStorm == "StormFlow36") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 26) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "StormFlow_dist.png"))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = isStorm == "BaseFlow37", zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow.png"))
time_scale %>% filter(isStorm == "BaseFlow37") %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 26) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "BaseFlow_dist.png"))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
ggsave(here("Plots_withNewLimits", "Time", "Abitrary.png"))
time_scale %>% filter(use == TRUE) %>% ggplot() + geom_histogram(aes( x = Velocity), color = "black", fill = "white") +
theme_bw(base_size = 26) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
ylab("Count") + xlab("Velocity (ft/s)") +
geom_vline(data = . %>% mutate(Average = median(Velocity)), aes(xintercept = Average, color = "Mean"), size = 2) +
geom_vline(data = . %>% mutate(Median = mean(Velocity)), aes(xintercept = Median, color = "Median"), size = 2) +
scale_color_manual(values = c("Mean" = "cornflowerblue", "Median" = "mediumvioletred")) + labs(color = "") + theme(legend.position = "top")
ggsave(here("Plots_withNewLimits", "Time", "Arbitrary_dist.png"))
time_scale %>% filter(isStorm %in% c("BaseFlow35", "StormFlow36", "BaseFlow37", "StormFlow38", "BaseFlow39")) %>% ggplot() +
geom_point(aes(x = Datetime, y = Velocity)) +
geom_tile(aes(x = Datetime, y = 4.2, fill = as.factor(type)), height = Inf, alpha = 0.4) +
ylab("Velocity (ft/s)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(labels = c("Baseflow", "Stormflow"), values = c(NA, "lightblue")) +
labs(fill = "Event Type") +
facet_zoom(x = use== TRUE, zoom.data = FALSE)
packages <- c("tidyverse", "ggforce", "ggpubr", "webshot", "ggrepel", "scales", "here", "readxl", "imputeTS", "padr", "survival", "stringr", "lubridate", "NADA", "gt", "webshot", "zoo", "rlang", "multcompView", "rcompanion", "forecast", "smooth", "KbMvtSkew")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..p.value.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..p.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_cor() +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..p.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_cor() +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_cor(label =  paste(..p.label.., ..adj.rr.label.., sep = "~~~~")) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_cor(aes(label =  paste(..p.label.., ..adj.rr.label.., sep = "~~~~"))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_cor(aes(label =  paste(..p.label.., ..rr.label.., sep = "~~~~"))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = T) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_cor(aes(label =  paste(..p.label.., ..rr.label.., sep = "~~~~"))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..AIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = RMSE(lm(y ~ x), y))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = rmse(lm(y ~ x), y))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
packages <- c("tidyverse", "ggforce", "Metrics", "ggpubr", "webshot", "ggrepel", "scales", "here", "readxl", "imputeTS", "padr", "survival", "stringr", "lubridate", "NADA", "gt", "webshot", "zoo", "rlang", "multcompView", "rcompanion", "forecast", "smooth", "KbMvtSkew")
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = rmse(lm(y ~ x), y))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(data = ., aes(label = rmse(lm(y ~ x), y))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = rmse(lm(y ~ x), Flow))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = rmse(lm(Flow ~ Rain), Flow))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
lm(Flow ~ Rain)
lm(csw_volume_change$Flow ~ csw_volume_change$Rain)
csw_volume_change
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% lm(Flow ~ Rain)
lm(csw_volume_change$total_v_before ~ csw_volume_change$Rain)
lm(csw_volume_change$total_v_before ~ csw_volume_change$Rain, formula = y ~ x)
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = rmse(lm(Flow ~ Rain), Flow))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
lm(csw_volume_change$Rain ~ csw_volume_change$total_v_before)
??rmse
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = rmse(Rain, Flow))) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = rmse(Rain, Flow), color = Type)) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = rmse(Flow, Rain), color = Type)) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = modelr::rmse(Flow, Rain), color = Type)) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = modelr::rmse(Flow ~ Rain), color = Type)) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = modelr::rmse(Flow ~ Rain, csw_volume_change), color = Type)) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(aes(label = modelr::rmse(Flow ~ Rain, .), color = Type)) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
csw_volume_change %>% filter(grepl("Storm", isStorm)) %>% rename("Before" = "total_v_before", "After" = "total_v_after") %>%
pivot_longer(cols = c(Before, After), names_to = "Type", values_to = "Flow") %>% mutate(Type = factor(Type, levels = c("Before", "After"))) %>%
ggplot(aes(x = Rain, y = Flow, color = Type)) + geom_point(aes(x = Rain, y = Flow, color = Type), size = 5, alpha = 0.4) +
geom_smooth(aes(x = Rain, y = Flow, color = Type), method = "lm", formula = y ~ x, se = F) + xlab("Rainfall (in.)") + ylab("Total Flow Volume (cubic feet)") +
geom_text(data = ., aes(label = modelr::rmse(Flow ~ Rain), color = Type)) +
stat_regline_equation(
aes(label =  paste(..eq.label.., ..adj.rr.label.., ..BIC.label.., sep = "~~~~")),
formula = y ~ x,
label.x = 0.7,
label.y.npc = 0.95,
size = 10,
show.legend = F
) + scale_color_manual(values = c("#D92122", "#6495ED")) + theme_bw(base_size = 36) + labs(color = "") + theme(strip.placement = "outside", panel.spacing = unit(1, "lines")) + theme(legend.position = "top", legend.box = "vertical") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(size = 30, face = "bold")) + theme(strip.background = element_blank())
View(csw_peakflow_change)
